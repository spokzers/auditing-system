<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Pdfdom extends CI_Controller {

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see https://codeigniter.com/user_guide/general/urls.html
	 */
	public function index()
	{
		$this->load->view('welcome_message');
	}

	public function view(){
		$this->load->view('welcome');
	}

	 function pdfview1(){
	  $this->load->library('pdf');

	  $name = "helloqwe";
	  $data = array(
	  	'name' => $name
	  	);
	  // $this->load->view('123training_card',$data);

	  $this->pdf->load_view('123training_card',$data);
	  $this->pdf->render();
	  $this->pdf->stream("456.pdf");

	 }

	 public function pdfview()
	 {
	 	$name = "helloqwe";
	  $data = array(
	  	'name' => $name
	  	);
	  $this->load->view('123training_card',$data);
	 }

	 public function mpf()
	 {
	 	$name = "Shamikg";
	 	 $data = array('name' => $name );;
        //load the view and saved it into $html variable
        $html=$this->load->view('welcome_message', $data, true);
 
        //this the the PDF filename that user will get to download
        $pdfFilePath = "output_pdf_name.pdf";
 
        //load mPDF library
        // $this->load->library('M_pdf');
        echo $html;
 
       //generate the PDF from the given html
        // $this->m_pdf->pdf->WriteHTML($html);
 
        //download it.
        // $this->m_pdf->pdf->Output($pdfFilePath, "D");
// $pdfFilePath = "/home/shami_syed/Downloads/lename.pdf";
        if (file_exists($pdfFilePath) == FALSE)
{
    ini_set('memory_limit','32M'); // boost the memory limit if it's low <img class="emoji" draggable="false" alt="ðŸ˜‰" src="https://s.w.org/images/core/emoji/72x72/1f609.png">
    $html = $this->load->view('123training_card', $data, true); // render the view into HTML
     
    $this->load->library('M_pdf');
    $pdf = $this->m_pdf->load();
    $pdf->SetFooter($_SERVER['HTTP_HOST'].'|{PAGENO}|'.date(DATE_RFC822)); // Add a footer for good measure <img class="emoji" draggable="false" alt="ðŸ˜‰" src="https://s.w.org/images/core/emoji/72x72/1f609.png">
    $pdf->WriteHTML($html); // write the HTML into the PDF
    $pdf->Output($pdfFilePath, 'D'); // save to file because we can
}

	 }

	 function certificate1(){
	  $this->load->library('pdf');

	  $name = "helloqwe";
	  $data = array(
	  	'name' => $name
	  	);
	  $this->load->view('123training_card',$data);

	  $this->pdf->load_view('certificate_template',$data);
	  $this->pdf->render();
	  $this->pdf->stream("456.pdf");

	 }

	 public function certificate()
	 {
	 	$name = "helloqwe";
	  $data = array(
	  	'name' => $name
	  	);
	  $this->load->view('certificate_template',$data);
	 }

}
